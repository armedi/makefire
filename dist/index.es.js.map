{"version":3,"file":"index.es.js","sources":["../src/Firestore.js","../src/index.js"],"sourcesContent":["function normalizePath(path) {\n  if (path.startsWith('/')) path = path.substring(1)\n  if (path.endsWith('/')) path = path.substring(0, path.length - 1)\n  return path\n}\n\nexport default class Firestore {\n  constructor(db) {\n    this.db = db\n    this.subscriptions = {}\n  }\n\n  subscribeDoc(path, subscriber) {\n    path = normalizePath(path)\n    let subscription = this.subscriptions[path]\n    if (subscription) {\n      subscription.subscribers.push(subscriber)\n      subscriber(subscription.state)\n    } else {\n      this.subscriptions[path] = {\n        state: {\n          data: null,\n          loading: true,\n          error: null\n        },\n        unsubscribe: this.db.doc(path).onSnapshot(doc => {\n          const state = {\n            data: Object.assign({ id: doc.id }, doc.data()),\n            loading: false,\n            error: null\n          }\n          this.subscriptions[path].state = state\n          this.subscriptions[path].subscribers.forEach(subscriber => {\n            subscriber(state)\n          })\n        }),\n        subscribers: [subscriber],\n      }\n    }\n  }\n\n  subscribeCollection(...args) {\n    const path = normalizePath(args[0])\n    const queries = (args.length > 2 && Array.isArray(args[1])) ? args[1] : []\n    const subscriber = args[args.length - 1]\n\n    let subscription = this.subscriptions[path]\n    if (subscription) {\n      subscription.subscribers.push(subscriber)\n      subscriber(subscription.state)\n    } else {\n      let ref = this.db.collection(path)\n      for (let query of queries) {\n        ref = ref.where(...query)\n      }\n      this.subscriptions[path] = {\n        state: {\n          data: [],\n          loading: true,\n          error: null\n        },\n        unsubscribe: ref.onSnapshot(querySnapshot => {\n          let data = []\n          querySnapshot.forEach(doc => {\n            data.push(Object.assign({ id: doc.id }, doc.data()))\n          })\n          const state = {\n            data,\n            loading: false,\n            error: null\n          }\n          this.subscriptions[path].state = state\n          this.subscriptions[path].subscribers.forEach(subscriber => {\n            subscriber(state)\n          })\n        }),\n        subscribers: [subscriber],\n      }\n    }\n  }\n\n  unsubscribe(path, subscriber) {\n    path = normalizePath(path)\n    const subcsription = this.subscriptions[path]\n    if (!subcsription) return\n\n    const index = subcsription.subscribers.findIndex(e => e === subscriber)\n    subcsription.subscribers.splice(index, 1)\n    if (subcsription.subscribers.length === 0) {\n      subcsription.unsubscribe()\n      delete this.subscriptions[path]\n    }\n  }\n\n  unsubscribeDoc(path, subscriber) {\n    this.unsubscribe(path, subscriber)\n  }\n\n  unsubscribeCollection(path, subscriber) {\n    this.unsubscribe(path, subscriber)\n  }\n}\n","import { useState, useEffect } from 'react'\n\nimport Firestore from './Firestore'\n\n\nexport default function makefire(firestoreDb) {\n  const db = new Firestore(firestoreDb)\n\n  function useDocument(path) {\n    const [dbState, setDbState] = useState({ data: null, loading: true, error: null })\n    useEffect(() => {\n      try {\n        db.subscribeDoc(path, setDbState)\n      } catch (error) {\n        setDbState({ data: null, loading: false, error })\n      }\n      return () => db.unsubscribeDoc(path, setDbState)\n    }, [])\n\n    return dbState\n  }\n\n  function useCollection(path, queries) {\n    const [dbState, setDbState] = useState({ data: [], loading: true, error: null })\n    useEffect(() => {\n      try {\n        db.subscribeCollection(path, queries, setDbState)\n      } catch (error) {\n        setDbState({ data: [], loading: false, error })\n      }\n      return () => db.unsubscribeCollection(path, setDbState)\n    }, [])\n\n    return dbState\n  }\n\n  return { useDocument, useCollection }\n}"],"names":["normalizePath","path","startsWith","substring","endsWith","length","Firestore","constructor","db","subscriptions","subscribeDoc","subscriber","subscription","subscribers","push","state","data","loading","error","unsubscribe","doc","onSnapshot","Object","assign","id","forEach","subscribeCollection","args","queries","Array","isArray","ref","collection","query","where","querySnapshot","subcsription","index","findIndex","e","splice","unsubscribeDoc","unsubscribeCollection","makefire","firestoreDb","useDocument","dbState","setDbState","useState","useEffect","useCollection"],"mappings":"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"}